'use strict';

module.exports = {
  up: async queryInterface => {
    const organization_action = [{
      id: 1,
      name: '新增组织',
      description: '新增组织',
      type: '组织',
      url: '/api/admin/organization',
      method: 'post',
      area: 'admin',
      controller: 'organization',
      action: 'create',
      sort: 1,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 2,
      name: '修改组织',
      description: '修改组织',
      type: '组织',
      url: '/api/admin/organization/:id',
      method: 'put',
      area: 'admin',
      controller: 'organization',
      action: 'update',
      sort: 2,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 3,
      name: '删除组织',
      description: '删除组织',
      type: '组织',
      url: '/api/admin/organization/:id',
      method: 'delete',
      area: 'admin',
      controller: 'organization',
      action: 'destroy',
      sort: 3,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 4,
      name: '组织列表',
      description: '组织列表',
      type: '组织',
      url: '/api/admin/organization',
      method: 'get',
      area: 'admin',
      controller: 'organization',
      action: 'index',
      sort: 4,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 5,
      name: '组织详情',
      description: '组织详情',
      type: '组织',
      url: '/api/admin/organization/:id',
      method: 'get',
      area: 'admin',
      controller: 'organization',
      action: 'show',
      sort: 5,
      created_at: new Date(),
      updated_at: new Date(),
    }];
    const project_action = [{
      id: 6,
      name: '新增项目',
      description: '新增项目',
      type: '项目',
      url: '/api/admin/project',
      method: 'post',
      area: 'admin',
      controller: 'project',
      action: 'create',
      sort: 1,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 7,
      name: '修改项目',
      description: '修改项目',
      type: '项目',
      url: '/api/admin/project/:id',
      method: 'put',
      area: 'admin',
      controller: 'project',
      action: 'update',
      sort: 2,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 8,
      name: '删除项目',
      description: '删除项目',
      type: '项目',
      url: '/api/admin/project/:id',
      method: 'delete',
      area: 'admin',
      controller: 'project',
      action: 'destroy',
      sort: 3,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 9,
      name: '项目列表',
      description: '项目列表',
      type: '项目',
      url: '/api/admin/project',
      method: 'get',
      area: 'admin',
      controller: 'project',
      action: 'index',
      sort: 4,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 10,
      name: '项目详情',
      description: '项目详情',
      type: '项目',
      url: '/api/admin/project/:id',
      method: 'get',
      area: 'admin',
      controller: 'project',
      action: 'show',
      sort: 5,
      created_at: new Date(),
      updated_at: new Date(),
    }];
    const user_action = [{
      id: 11,
      name: '新增用户',
      description: '新增用户',
      type: '用户',
      url: '/api/admin/user',
      method: 'post',
      area: 'admin',
      controller: 'user',
      action: 'create',
      sort: 1,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 12,
      name: '修改用户',
      description: '修改用户',
      type: '用户',
      url: '/api/admin/user/:id',
      method: 'put',
      area: 'admin',
      controller: 'user',
      action: 'update',
      sort: 2,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 13,
      name: '删除用户',
      description: '删除用户',
      type: '用户',
      url: '/api/admin/user/:id',
      method: 'delete',
      area: 'admin',
      controller: 'user',
      action: 'destroy',
      sort: 3,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 14,
      name: '用户列表',
      description: '用户列表',
      type: '用户',
      url: '/api/admin/user',
      method: 'get',
      area: 'admin',
      controller: 'user',
      action: 'index',
      sort: 4,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 15,
      name: '用户详情',
      description: '用户详情',
      type: '用户',
      url: '/api/admin/user/:id',
      method: 'get',
      area: 'admin',
      controller: 'user',
      action: 'show',
      sort: 5,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 16,
      name: '重置用户密码',
      description: '重置用户密码',
      type: '用户',
      url: '/api/admin/user/reset/:id',
      method: 'post',
      area: 'admin',
      controller: 'user',
      action: 'reset',
      sort: 6,
      created_at: new Date(),
      updated_at: new Date(),
    }];
    const role_action = [{
      id: 17,
      name: '新增角色',
      description: '新增角色',
      type: '角色',
      url: '/api/admin/role',
      method: 'post',
      area: 'admin',
      controller: 'role',
      action: 'create',
      sort: 1,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 18,
      name: '修改角色',
      description: '修改角色',
      type: '角色',
      url: '/api/admin/role/:id',
      method: 'put',
      area: 'admin',
      controller: 'role',
      action: 'update',
      sort: 2,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 19,
      name: '删除角色',
      description: '删除角色',
      type: '角色',
      url: '/api/admin/role/:id',
      method: 'delete',
      area: 'admin',
      controller: 'role',
      action: 'destroy',
      sort: 3,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 20,
      name: '角色列表',
      description: '角色列表',
      type: '角色',
      url: '/api/admin/role',
      method: 'get',
      area: 'admin',
      controller: 'role',
      action: 'index',
      sort: 4,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 21,
      name: '角色详情',
      description: '角色详情',
      type: '角色',
      url: '/api/admin/role/:id',
      method: 'get',
      area: 'admin',
      controller: 'role',
      action: 'show',
      sort: 5,
      created_at: new Date(),
      updated_at: new Date(),
    }];
    const module_action = [{
      id: 22,
      name: '新增模块',
      description: '新增模块',
      type: '模块',
      url: '/api/admin/module',
      method: 'post',
      area: 'admin',
      controller: 'module',
      action: 'create',
      sort: 1,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 23,
      name: '修改模块',
      description: '修改模块',
      type: '模块',
      url: '/api/admin/module/:id',
      method: 'put',
      area: 'admin',
      controller: 'module',
      action: 'update',
      sort: 2,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 24,
      name: '删除模块',
      description: '删除模块',
      type: '模块',
      url: '/api/admin/module/:id',
      method: 'delete',
      area: 'admin',
      controller: 'module',
      action: 'destroy',
      sort: 3,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 25,
      name: '模块列表',
      description: '模块列表',
      type: '模块',
      url: '/api/admin/module',
      method: 'get',
      area: 'admin',
      controller: 'module',
      action: 'index',
      sort: 4,
      created_at: new Date(),
      updated_at: new Date(),
    }, {
      id: 26,
      name: '模块详情',
      description: '模块详情',
      type: '模块',
      url: '/api/admin/module/:id',
      method: 'get',
      area: 'admin',
      controller: 'module',
      action: 'show',
      sort: 5,
      created_at: new Date(),
      updated_at: new Date(),
    }];
    const permission_action = [{
      id: 27,
      name: '权限列表',
      description: '权限列表',
      type: '权限',
      url: '/api/admin/permission',
      method: 'get',
      area: 'admin',
      controller: 'permission',
      action: 'index',
      sort: 1,
      created_at: new Date(),
      updated_at: new Date(),
    }];
    const transaction = await queryInterface.sequelize.transaction();
    try {
      await queryInterface.bulkInsert('permissions', [
        ...organization_action,
        ...project_action,
        ...user_action,
        ...role_action,
        ...module_action,
        ...permission_action,
      ], { transaction });
      await transaction.commit();
    } catch (err) {
      await transaction.rollback();
      throw err;
    }
  },

  down: async queryInterface => {
    return queryInterface.bulkDelete('permissions', null, {});
  },
};
